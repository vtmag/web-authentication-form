import { ClassHelpers, ListAccessor, Realm, TypeHelpers, binding } from "./internal";
type PropertyContext = binding.Property & {
    type: binding.PropertyType;
    objectSchemaName: string;
    embedded: boolean;
    default?: unknown;
};
/** @internal */
export type HelperOptions = {
    realm: Realm;
    getClassHelpers: (name: string) => ClassHelpers;
};
type PropertyAccessor = {
    get(obj: binding.Obj): unknown;
    set(obj: binding.Obj, value: unknown): unknown;
    listAccessor?: ListAccessor;
};
/** @internal */
export type PropertyHelpers = TypeHelpers & PropertyAccessor & {
    type: binding.PropertyType;
    columnKey: binding.ColKey;
    embedded: boolean;
    default?: unknown;
    objectType?: string;
};
/** @internal */
export declare function createPropertyHelpers(property: PropertyContext, options: HelperOptions): PropertyHelpers;
export {};
